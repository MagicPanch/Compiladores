{
*{CODIGO DE TESTEO PARA EL ASSEMBLER DE FUNCIONES, INVOCACIONES, CLASES, INTERFACES, CLAUSULAS IMPL, HERENCIA Y VARIABLES DE INSTANCIA (TODO LO RELACIONADO A FUNCIONES)}*
	
	INTERFACE interfaz {
		VOID funcion_c1(),
	},

	CLASS c1 IMPLEMENT interfaz {
		ULONG z,		
		DOUBLE w,		

		VOID funcion_c1 () {
			z = 30_ul,
			RETURN,
		},

		VOID funcion_impl_c1(),
	},

	CLASS c2 {
		INT x; y,
		c1,		

		VOID funcion_c2 (INT numero) {
			VOID funcion_anidada() {
				RETURN,
			},
			x = numero + 1_i,
			RETURN,
		},		
	},

	IMPL FOR c1: {
		VOID funcion_impl_c1() {
			z = z / 2_ul,
			w = 3.5,
			RETURN,
		},
	},

	INT x; y,
	x = 5_i,			*{x:main = 5}*
	y = 1_i,			*{y:main = 1}*	
	c2 inst_c2,			
	inst_c2.funcion_c2(x+y),	*{numero:main(c2):funcion_c2 = 5+1 = 6, inst_c2.x:main = 6+1 = 7}*
	inst_c2.c1.funcion_c1(),	*{inst_c2.c1.z:main = 30}*
	inst_c2.c1.funcion_impl_c1(),	*{inst_c2.c1.z:main = 30/2 = 15, inst_c2.c1.w:main = 3.5}*
	inst_c2.funcion_c2(2_i),	*{numero:main(c2):funcion_c2 = 2, inst_c2.x:main = 2+1 = 3}*

	VOID funcion_main() {
		x -= y,					
		y = 10_i,
		RETURN,		
	},

	funcion_main(),			*{x:main = 5 - 1 = 4, y:main = 10}*
}
*{NOTA: DE ACUERDO AL SEGUIMIENTO DE CADA VARIABLE, AL FINAL DEL PROGRAMA LOS VALORES DE LAS VARIABLES NUMERICAS (EXCEPTUANDO ATRIBUTOS DE CLASE) DEBEN SER:
x:main = 4
y:main = 10
inst_c2.x:main = 3
inst_c2.y:main = 0 (NUNCA SE LE ASIGNA NADA POR LO QUE SU VALOR ES 0 QUE ES CON EL QUE SE INICIALIZAN LAS VARIABLES)
inst_c2.c1.z = 15
inst_c2.c1.w = 3.5
numero:main(c2):funcion_c2 = 2 (AL SER UN PARAMETRO, EN REALIDAD ESTE VALOR SE MODIFICA EN CADA LLAMADO A LA FUNCION A LA QUE CORRESPONDE, O SEA funcion_c2:main(c2)) 
}*